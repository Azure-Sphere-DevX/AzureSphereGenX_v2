---
genx:
  project_path: "../GenX_Generated"

components:
  - name: count
    class: Extern
    enabled: false
    properties:
      type: int

  - name: FactoryAlertButtonA
    class: GpioInputPoll
    enabled: false
    properties:
      pin: BUTTON_A
      detect: DX_GPIO_DETECT_LOW
      repeat:
        seconds: 0
        nanoseconds: 200 * ONE_MS

  - name: FactoryAlertButtonB
    class: GpioInputPoll
    enabled: false
    properties:
      pin: BUTTON_B
      detect: DX_GPIO_DETECT_LOW

  - name: FactoryLight
    class: GpioOutput
    enabled: false
    properties:
      pin: STATUS_LED
      initialState: GPIO_Value_Low
      invertPin: false

  - name: FactoryFan
    class: GpioOutput
    enabled: false
    properties:
      pin: PIN_0
      initialState: GPIO_Value_Low
      invertPin: false

  - name: PressureAlertLevel
    description: Azure IoT device twin cloud to device
    class: DeviceTwinPnPWithContext
    enabled: false
    properties:
      type: float
      context:
        name: FactoryLight
      lambda: |
        // Test device twin float is within range
            if (!IN_RANGE(*(float*)value, 1600, 2000))
            {
                dx_deviceTwinAckDesiredValue(deviceTwinBinding, deviceTwinBinding->propertyValue, DX_DEVICE_TWIN_RESPONSE_ERROR);
            }

            dx_gpioOn(context);

  - name: FactoryTargetTemperature
    description: Avnet IoT Connect device twin cloud to device
    class: DeviceTwinAvnet
    enabled: false
    properties:
      type: int
      lambda: |
        // Test device twin int is within range
            if (!IN_RANGE(*(int*)value, 0, 120))
            {
                dx_deviceTwinAckDesiredValue(deviceTwinBinding, deviceTwinBinding->propertyValue, DX_DEVICE_TWIN_RESPONSE_ERROR);
            }

  - name: OfficeTargetTemperature
    class: DeviceTwinPnP
    enabled: false
    properties:
      type: int
      lambda: |
        // Test device twin int is within range
            if (!IN_RANGE(*(int*)value, 0, 80))
            {
                dx_deviceTwinAckDesiredValue(deviceTwinBinding, deviceTwinBinding->propertyValue, DX_DEVICE_TWIN_RESPONSE_ERROR);
            }

  - name: FactoryLightOn
    class: DirectMethodWithContext
    enabled: false
    properties:
      context:
        name: FactoryLight
      lambda: dx_gpioOn(context);

  - name: FactoryLightOff
    class: DirectMethodWithContext
    enabled: false
    properties:
      context:
        name: FactoryLight
      lambda: dx_gpioOff(context);

  - name: Counter
    class: DirectMethodWithContext
    enabled: false
    properties:
      context:
        type: int
        name: count
      lambda: |-
        *context++;

  - name: LightControl
    class: DirectMethod
    enabled: false
    properties:
      lambda: |
        // Direct method JSON payload example {{"State":true}}:
            char state_property[] = "State";
            JSON_Object *jsonObject = json_value_get_object(json);
            if (jsonObject == NULL || !json_object_has_value_of_type(jsonObject, state_property, JSONBoolean)) {{
                return DX_METHOD_FAILED;
            }}
            bool state = (int)json_object_get_boolean(jsonObject, state_property);
            Log_Debug("State: %d\n", (int)state);

  - name: FanOff
    class: DirectMethodWithContext
    enabled: false
    properties:
      context:
        name: FactoryFan
      lambda: dx_gpioOff(context);

  - name: FanOn
    class: DirectMethodWithContext
    enabled: false
    properties:
      context:
        name: FactoryFan
      lambda: dx_gpioOn(context);

  - name: MeasureTemperature
    class: Timer
    enabled: false
    properties:
      delay:
        seconds: 5
        nanoseconds: 0

  - name: RestartDevice
    enabled: false
    class: RestartDevice

  - name: PublishTelemetry
    enabled: false
    class: PublishTelemetry
    properties:
      repeat:
        seconds: 6
        nanoseconds: 0

  - name: Watchdog
    description: Watchdog on a 30 second refresh cadence
    enabled: false
    class: Watchdog

  - name: DeferredUpdate
    description: Deferred update framework and a device twin to report status
    warning:
      "The app_manifest.json file is updated with the following capabilities:
      SystemEventNotifications and SoftwareUpdateDeferral"
    enabled: false
    class: DeferredUpdate

azure_iot:
  - name: glovebox-demo
    enabled: false
    pnpModel: "dtmi:com:example:application;1"
    networkInterface: "wlan0"
    manifest:
      CmdArgs:
        - "--ScopeID"
        - REPLACE_WITH_YOUR_ID_SCOPE
      Capabilities:
        - DeviceAuthentication: REPLACE_WITH_YOUR_TENANT_ID
        - AllowedConnections:
            - REPLACE_WITH_REQUIRED_ENDPOINTS
        - SystemEventNotifications: false
        - SoftwareUpdateDeferral: false
        - PowerControls: []
